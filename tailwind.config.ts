import type { Config } from "tailwindcss";

export default <Partial<Config>>{
  content: [
    "./app/**/*.vue",
    "./app/constants/**/*.ts",
    "./app/assets/**/*.css",
  ],
  theme: {
    fontSize: {
      base: "0.875rem",
      xs: "0.656rem",
      sm: "0.765rem",
      lg: "0.984rem",
      xl: "1.093rem",
      "2xl": "1.312rem",
      "3xl": "1.64rem",
      "4xl": "1.968rem",
      "5xl": "2.625rem",
      "6xl": "3.28rem",
      "7xl": "3.937rem",
      "8xl": "5.25rem",
      "9xl": "7rem",
    },
    colors: ({ colors }) => ({
      inherit: colors.inherit,
      current: colors.current,
      transparent: colors.transparent,
      black: colors.black,
      white: colors.white,
      default: "rgba(var(--color-bg), <alpha-value>)",
      emphasis: "rgba(var(--color-bg-emphasis), <alpha-value>)",
      subtle: "rgba(var(--color-bg-subtle), <alpha-value>)",
      muted: "rgba(var(--color-bg-muted), <alpha-value>)",
      warning: "rgba(var(--color-bg-warning), <alpha-value>)",
      success: "rgba(var(--color-bg-success), <alpha-value>)",
      text: {
        emphasis: "rgba(var(--color-bg-text-emphasis), <alpha-value>)",
        subtle: "rgba(var(--color-bg-text-subtle), <alpha-value>)",
      },
      active: "rgba(var(--color-bg-active), <alpha-value>)",
      alert: {
        success: "var(--color-alert-success)",
        warning: "var(--color-alert-warning)",
        error: "var(--color-alert-error)",
        info: "var(--color-alert-info)",
      },
      button: {
        primary: "var(--color-button-primary)",
        "primary-hover": "var(--color-button-primary-hover)",
        secondary: "var(--color-button-secondary)",
        "secondary-hover": "var(--color-button-secondary-hover)",
        emphasis: "var(--color-button-emphasis)",
        "emphasis-hover": "var(--color-button-emphasis-hover)",
        subtle: "var(--color-button-subtle)",
        "subtle-hover": "var(--color-button-subtle-hover)",
        danger: "var(--color-button-danger)",
        "danger-hover": "var(--color-button-danger-hover)",
      },
      promo: {
        primary: "var(--color-promo-primary)",
      },
    }),
    textColor: ({ colors }) => ({
      inherit: colors.inherit,
      current: colors.current,
      transparent: colors.transparent,
      black: colors.black,
      white: colors.white,
      primary: "var(--color-text-primary)",
      "primary-hover": "var(--color-text-primary-hover)",
      default: "var(--color-text)",
      subtle: "var(--color-text-subtle)",
      "subtle-light": "var(--color-text-subtle-light)",
      emphasis: "var(--color-text-emphasis)",
      alert: {
        success: "var(--color-alert-text-success)",
        warning: "var(--color-alert-text-warning)",
        error: "var(--color-alert-text-error)",
        info: "var(--color-alert-text-info)",
      },
      button: {
        primary: "var(--color-button-text-primary)",
        secondary: "var(--color-button-text-secondary)",
        emphasis: "var(--color-button-text-emphasis)",
        subtle: "var(--color-button-text-subtle)",
        danger: "var(--color-button-text-danger)",
      },
      promo: {
        primary: "var(--color-promo-text-primary)",
      },
    }),
    borderRadius: {
      none: "0px",
      sm: "0.2rem",
      DEFAULT: "0.4rem",
      lg: "0.8rem",
      full: "9999px",
    },
    extend: {
      backgroundImage: {
        "button-primary": "var(--color-button-primary)",
        "button-primary-hover": "var(--color-button-primary-hover)",
        "button-secondary": "var(--color-button-secondary)",
        "button-secondary-hover": "var(--color-button-secondary-hover)",
        "button-emphasis": "var(--color-button-emphasis)",
        "button-emphasis-hover": "var(--color-button-emphasis-hover)",
      },
      screens: {
        xs: "400px",
      },
      height: {
        screen: ["100vh", "100dvh"],
      },
      keyframes: {
        dialogOverlayShow: {
          from: { opacity: "0" },
          to: { opacity: "1" },
        },
        dialogOverlayHide: {
          from: { opacity: "1" },
          to: { opacity: "0" },
        },
        dialogContentShow: {
          from: { opacity: "0", transform: "translateY(-4rem) scale(0.96)" },
          to: { opacity: "1", transform: "translateY(0rem) scale(1)" },
        },
        dialogContentHide: {
          from: { opacity: "1", transform: "translateY(0rem) scale(1)" },
          to: { opacity: "0", transform: "translateY(-4rem) scale(0.96)" },
        },
      },
      animation: {
        dialogOverlayShow: "dialogOverlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1)",
        dialogOverlayHide: "dialogOverlayHide 150ms cubic-bezier(0.16, 1, 0.3, 1)",
        dialogContentShow: "dialogContentShow 150ms cubic-bezier(0.16, 1, 0.3, 1)",
        dialogContentHide: "dialogContentHide 150ms cubic-bezier(0.16, 1, 0.3, 1)",
      },
    },
  },
};
