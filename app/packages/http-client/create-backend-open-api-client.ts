import createClient from "openapi-fetch";
import type { paths } from "./girobet-backend-generated-http-client/openapi-typescript"; // generated by openapi-typescript

// export class BackendOpenApiClient<Paths extends {}, Media extends MediaType = MediaType> {
//   public static new(baseUrl: string): BackendOpenApiClient<paths> {
//     return new BackendOpenApiClient(baseUrl);
//   }

//   public async get<Path extends PathsWithMethod<Paths, "get">, Init extends MaybeOptionalInit<Paths[Path], "get">>(path: Path, ...init: InitParam<Init>) {
//     const { data, error, response } = await this.apiClient.GET(path, ...init as unknown as any);
//     if (data) {
//       return success(data);
//     }
//     if (error) {
//       throw error;
//     }
//     throw new Error("Unexpected scenario: library did not return data nor error. This should never happen");
//   }

//   private apiClient: ReturnType<typeof createClient<Paths, "application/json">>;
//   private constructor(baseUrl: string) {
//     this.apiClient = createClient<paths>({ baseUrl });
//   }
// }

export const createBackendOpenApiClient = (baseUrl: string) => {
  return createClient<paths>({ baseUrl });
};
